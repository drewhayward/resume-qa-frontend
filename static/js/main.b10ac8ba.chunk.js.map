{"version":3,"sources":["components/Navbar.js","components/QABar.js","components/DialogHistory.js","profile500.jpg","pages/Home.js","App.js","index.js"],"names":["navbar","Navbar","sticky","bg","expand","Container","fluid","Brand","NavDropdown","title","Item","href","QABar","props","state","hintText","inputText","showModal","onTextChange","bind","onKeyUpHandler","e","this","setState","target","value","key","onSubmit","Row","className","style","searchbarStyle","Col","xs","placeholder","onFocus","onTextFocus","onChange","onKeyUp","border","height","fontSize","marginLeft","width","type","Modal","show","Header","Body","Footer","Button","variant","onClick","React","Component","DialogHistory","dialogHistory","history","map","pair","index","answer","question","Home","answerText","showCursor","fetchQuestionAnswer","text","axios","post","then","resp","data","charAt","toUpperCase","slice","concat","catch","console","log","md","padding","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b10ac8ba.chunk.js","sourcesContent":["import React from 'react'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport { Container, NavDropdown } from 'react-bootstrap'\nimport NavbarCollapse from 'react-bootstrap/esm/NavbarCollapse'\n// import { Link } from 'react-router-dom'\n\nconst navbar = () =>\n    (\n    <Navbar sticky=\"top\" bg=\"light\" expand=\"lg\">\n        <Container fluid='sm'>\n            <Navbar.Brand>Talk to Résumé</Navbar.Brand>\n            {/* <Nav.Link href=\"https://drewhayward.github.io\">Drew Hayward</Nav.Link> */}\n            {/* <NavbarCollapse> */}\n                {/* <Nav> */}\n                    <NavDropdown title=\"Code\">\n                        <NavDropdown.Item href=\"https://github.com/drewhayward/resume-qa-frontend\">Frontend</NavDropdown.Item>\n                        <NavDropdown.Item href=\"https://github.com/drewhayward/resume-qa-frontend\">Backend</NavDropdown.Item>\n                    </NavDropdown>\n                {/* </Nav> */}\n            {/* </NavbarCollapse> */}\n        </Container>\n    </Navbar>\n    )\n\nexport default navbar","import React from 'react'\nimport { Row, Col, Modal, Button } from 'react-bootstrap'\nimport ModalHeader from 'react-bootstrap/esm/ModalHeader'\n\nclass QABar extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            hintText: \"Ask me anything...\",\n            inputText: \"\",\n            showModal: false\n        }\n\n        this.onTextChange = this.onTextChange.bind(this)\n        this.onKeyUpHandler = this.onKeyUpHandler.bind(this)\n    }\n\n    onTextChange(e) {\n        this.setState({\n            inputText: e.target.value\n        })\n    }\n\n    onKeyUpHandler(e) {\n        if (e.key === \"Enter\") {\n            this.props.onSubmit(e.target.value)\n            this.setState({ inputText: \"\" })\n        }\n    }\n\n\n    render() {\n        return (\n            <Row className=\"justify-content-left align-items-center\" style={searchbarStyle}>\n                <Col xs=\"10\">\n                    <input\n                        value={this.state.inputText}\n                        placeholder={this.state.hintText}\n                        onFocus={this.onTextFocus}\n                        onChange={this.onTextChange}\n                        onKeyUp={this.onKeyUpHandler}\n                        style={{ border: \"none\", height: '41px', fontSize: '22pt', marginLeft: '3px', width: \"95%\", 'outlineWidth': 0 }}\n                        type=\"field\" />\n                </Col>\n                {/* <Col xs=\"2\">\n                    <Button\n                        style={buttonStyle}\n                        onClick={() => this.setState({ showModal: true })}\n                        type=\"button\">?</Button>\n                </Col> */}\n                <Modal show={this.state.showModal}>\n                    <Modal.Header>\n                        What is this?\n                    </Modal.Header>\n                    <Modal.Body>\n                        I deployed a question-answering model conditioned on a\n                        fact-heavy bio of myself. You can ask it questions about my\n                        experience, education, or whatever, and it will try to answer\n                        them.\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={() => this.setState({ showModal: false })}>Close</Button>\n                    </Modal.Footer>\n                </Modal>\n            </Row>)\n    }\n}\n\nconst buttonStyle = {\n    \"backgroundColor\": \"none\",\n    \"borderRadius\": \"48px\"\n}\n\nconst searchbarStyle = {\n    \"borderColor\": \"black\",\n    \"border\": \"solid\",\n    \"borderRadius\": \"48px\",\n    \"borderWidth\": \"1px\",\n    \"marginTop\": \"10px\"\n}\n\nexport default QABar","import React from 'react'\nimport { Row, Col } from 'react-bootstrap'\n// import Typist from 'react-typist'\n\n\nconst DialogHistory = (props) => {\n    let history = props.history\n\n    const dialogHistory = history.map((pair, index) => (\n        <Row key={index}>\n            <Col>\n                <Row className=\"justify-content-start\">\n                    <Col className=\"col-8 text-left\">\n                        {pair.answer}\n                    </Col>\n                </Row>\n                <Row className=\"justify-content-end\">\n                    <Col className=\"col-8 text-right\">\n                        <p>{pair.question}</p>\n                    </Col>\n                </Row>\n            </Col>\n        </Row>\n\n    ))\n\n    return (\n        <div>\n            {dialogHistory}\n        </div>\n    )\n}\n\nconst interBubbleStyle = {\n    \"backgroundColor\": \"lightblue\",\n    \"borderRadius\": \"10px\"\n}\n\nconst aiBubbleStyle = {\n    \"backgroundColor\": \"lightblue\",\n    \"borderRadius\": \"10px\"\n}\n\nexport default DialogHistory","export default __webpack_public_path__ + \"static/media/profile500.0cd0024d.jpg\";","import React from 'react'\nimport axios from 'axios'\n\nimport { Image, Row, Col } from 'react-bootstrap'\n\nimport QABar from '../components/QABar'\nimport profilePic from '../profile500.jpg'\n// import Typist from 'react-typist'\nimport DialogHistory from '../components/DialogHistory'\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            answerText: \"\",\n            showCursor: false,\n            history: []\n        }\n\n        this.fetchQuestionAnswer = this.fetchQuestionAnswer.bind(this)\n    }\n\n    fetchQuestionAnswer(text) {\n        axios.post(\"https://qabackend-mgbfvhje3a-uc.a.run.app/question/\", {\n            'question': text\n        }).then((resp) => {\n            var answer = resp.data.answer\n            answer = answer.charAt(0).toUpperCase() + answer.slice(1)\n            this.setState({\n                answerText: answer,\n                history: [{ question: text, answer: answer }].concat(this.state.history)\n            })\n        }).catch((resp) => {\n            console.log(resp)\n            this.setState({\n                answerText: \"IT failed\"\n            })\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <Row className=\"justify-content-center\">\n                    <Col md={6}>\n                        <p>\n                            Talk to resume is a fun little project to learn/practice deploying NLP/ML models.\n                            Type in any question you might ask about my professional experience and see how\n                            the model answers!\n                        </p>\n                        <b>\n                            Please note that my little demo here feels no remorse in lying about my experince.\n                            If you want to confirm its answers, go checkout my social media or reach out.\n                        </b>\n                    </Col>\n                </Row>\n                <Row className=\"justify-content-center\" style={{ padding: 10 }}>\n                    <Col md={8}>\n                        <QABar onSubmit={this.fetchQuestionAnswer} />\n                    </Col>\n                </Row>\n                <Row className=\"justify-content-center\">\n                    <Col md={7}>\n                        <DialogHistory history={this.state.history} />\n                    </Col>\n                </Row>\n            </div >\n        )\n    }\n\n}\n\nexport default Home","import React from \"react\";\n// import {\n//   HashRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\nimport Navbar from './components/Navbar'\nimport Footer from './components/Footer'\nimport { Row, Col } from 'react-bootstrap'\nimport Container from 'react-bootstrap/Container'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Home from './pages/Home'\n\nexport default function App() {\n  return (\n    // <div>\n    //   <p>Under construction...</p>\n    // </div>\n    // <Router basename='/'>\n      <div>\n        <Navbar />\n        <Container style={{\"paddingBottom\": '60px'}} fluid='md'>\n          {/* <Switch>\n            <Route path=\"/\"> */}\n              <Home />\n            {/* </Route>\n          </Switch> */}\n        </Container>\n        {/* <Footer /> */}\n      </div>\n    // </Router>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}